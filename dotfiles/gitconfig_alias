[alias]
  a = add .
  ai = add -i
  aam = !git add . && git commit --amend -m
  aan = !git add . && git commit --amend --no-edit
  acm = !git add . && git commit -m
  #############
  ap = apply
  as = apply --stat
  ac = apply --check
  #############
  ama = am --abort
  amr = am --resolved
  ams = am --skip
  #############
  b = branch
  ba = branch -a
  bd = branch -d
  br = branch -r
  #############
  c = commit
  ca = commit -a
  cm = commit -m
  cem = commit --allow-empty -m
  cam = commit -am
  cd = commit --amend
  cad = commit -a --amend
  ced = commit --allow-empty --amend
  #############
  d = diff
  dc = diff --cached
  dl = difftool
  dlc = difftool --cached
  dld = difftool --dir-diff
  dk = diff --check
  dp = diff --patience
  dck = diff --cached --check
  #############
  f = fetch
  fo = fetch origin
  #############
  fp = format-patch
  #############
  fk = fsck
  #############
  g = grep -p
  gin = grep -EIin
  #############
  l = log --oneline
  lg = log --oneline --graph --decorate
  lgb = log --oneline --graph --decorate --branches
  lgp = log --oneline --graph --decorate --branches --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
  #############
  ls = ls-files
  lsf = "!git ls-files | grep -i"
  #############
  m = merge
  ma = merge --abort
  mc = merge --continue
  ms = merge --skip
  #############
  o = checkout
  ob = checkout -b
  #############
  permission-reset = !git diff -p -R --no-color | grep -E \"^(diff|(old|new) mode)\" --color=never | git apply
  #############
  pr = prune -v
  #############
  ps = push
  psf = push -f
  psu = push -u
  pso = push origin
  psao = push --all origin
  psfo = push -f origin
  psuo = push -u origin
  psom = push origin master
  psfom = push -f origin master
  psuom = push -u origin master
  #############
  pl = pull
  plu = pull -u
  plo = pull origin
  plp = pull upstream
  plom = pull origin master
  plpm = pull upstream master
  #############
  pb = pull --rebase
  pbo = pull --rebase origin
  pbp = pull --rebase upstream
  pbom = pull --rebase origin master
  pbpm = pull --rebase upstream master
  #############
  rb = rebase
  rba = rebase --abort
  rbc = rebase --continue
  rbi = rebase --interactive
  rbs = rebase --skip
  #############
  re = reset
  rh = reset HEAD
  reh = reset --hard
  rem = reset --mixed
  res = reset --soft
  rehh = reset --hard HEAD
  remh = reset --mixed HEAD
  resh = reset --soft HEAD
  #############
  r = remote
  ra = remote add
  rr = remote rm
  rv = remote -v
  rp = remote prune
  rs = remote show
  rao = remote add origin
  rso = remote show origin
  rpo = remote prune origin
  #############
  s = status
  sb = status -s -b
  #############
  sh = show
  shp = show -p
  shr = show -p --no-color
  #############
  sta = stash apply
  stc = stash clear
  std = stash drop
  stl = stash list
  stp = stash pop
  sts = stash save
  stw = stash show
  snapshot = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}"
  #############
  subinit = submodule update --init --recursive
  subpull = submodule foreach git pull --tags origin master
  subrepo = !sh -c 'filter-branch --prune-empty --subdirectory-filter $1 master' -
  #############
  svnr = svn rebase
  svnd = svn dcommit
  svnl = svn log --oneline --show-commit
  #############
  wa = worktree add
  wab = "!f() { _TOPLEVEL=$(git rev-parse --show-toplevel); echo Testing: \"${_TOPLEVEL}/../${_TOPLEVEL##*/}-$1\"; git worktree add \"${_TOPLEVEL}/../${_TOPLEVEL##*/}-$1\" -b \"$1\"; }; f"
  worktreedeleteconfirmed = "!f() { _TOPLEVEL=$(git rev-parse --show-toplevel); rm -rf ${_TOPLEVEL}-$1; git worktree prune && git b -D $1; }; f"  # For safety
  wdb = "!f() { if [ \"$1\" != \"-D\" ]; then echo \"Need '-D' flag to delete a worktree!\" >&2; return 1; else git worktreedeleteconfirmed $2; fi; }; f"
  wl = worktree list
  wp = worktree prune
  #############
  # ...
  #############
  assume = update-index --assume-unchanged
  assumed = "!git ls-files -v | grep ^h | cut -c 3-"
  assumeall = "!git st -s | awk {'print $2'} | xargs git assume"
  unassume = update-index --no-assume-unchanged
  unassumeall = !git assumed | xargs git update-index --no-assume-unchanged
  #############
  ours = "!f() { git checkout --ours $@ && git add $@; }; f"
  theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"
  #############
  whois = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -"
  whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short
  #############
  barebranch = !sh -c 'git symbolic-ref HEAD refs/heads/$1 && git rm --cached -r . && git clean -xfd' -
  flat = clone --depth 1
  human = name-rev --name-only --refs=refs/heads/*
  serve = !git daemon --reuseaddr --verbose  --base-path=. --export-all ./.git
  #############
  send = !git add . && git commit -m "\"Minor Change (`whoami`): $(date)\"" && git push

