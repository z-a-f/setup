# .bashrc_custom file
# By Zafar M. Takhirov (cc.rafaz@zafar.cc)
#
# This file can have anything that is not included in .bashrc
# Use this file for customization rather than global/environment setup

########################################################################################################
## Libraries
export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/cuda/lib64
########################################################################################################

# Options:
shopt -s autocd                 # Enable auto-cd
shopt -s globstar		# Enable stars in the path

# make sure the C-h is working properly
[[ $- == *i* ]] && stty erase 

# Custom BIN paths:
## This will be included as a very last resort, and will hold only executables with the least priority: 
# PATH=${HOME}/bin:${HOME}/.local/bin:${PATH}
# pathmunge ${HOME}/.local/bin
PATH=${PATH}:${HOME}/.local/bin
pathmunge ${HOME}/bin
test -e /usr/local/cuda && pathmunge /usr/local/cuda/bin
# export PATH
# Custom bin paths have to be BEFORE $PATH.
# We want our scripts to have priority, right?

# Icarus paths:
# PATH=$PATH:/Developer/Simulator/Icarus/bin

# Change the prompt:
export PS1="\[${Color_Off}${BICyan}\u${White}@${BIGreen}\h${White}:${BIYellow}\W${Color_Off}\]\n\$> "

# Setup better colors:
#export CLICOLOR=1
#export LSCOLORS=ExFxBxDxCxegedabagacad

export CLICOLOR=1
export LSCOLORS=GxFxCxDxCxegedabagaced
export LS_COLORS="di=01;33:ln=04;35:or=5;37;41:so=33:ex=00;32"

# Also change the terminal colors as well
export TERM=xterm-256color

# Change the aliases:
alias abspath='which abspath || python -c "import os,sys; print os.path.abspath(sys.argv[1])"' # This is just a hack
alias adbreset='adb kill-server && adb start-server'
alias cp='cp -rv'
alias cppcheck='cppcheck --enable=all --inconclusive --std=posix --language=c++'
# alias dog='highlight -O ansi --failsafe'
alias dog='highlight -O xterm256 --failsafe'
# alias et='emacsclient -t'
# alias ec='emacsclient -c'
alias emacsd='emacs --daemon'
alias emax='emacsclient -t'
alias ekill="emacsclient -e '(kill-emacs)'"
alias ff="grep -rnw '.' -e "
alias ls='ls -GFh'
alias ll='ls -GFhal'
alias mkdir='mkdir -pv'
alias nano='nano -c'
alias pig='pygmentize -g'
alias rm='rm -vi'
alias todo='xargs -I{} git grep -nEIi "TODO\s*\({}\)" <<<'
alias tw='open -a /Applications/TextWrangler.app'
alias valgrind='valgrind --leak-check=full --tool=memcheck'
alias todo='xargs -I{} git grep -EIi "TODO\({}\)" <<<'

# If the computer is Darwin:
if [ "$(uname)" == "Darwin" ]; then
    alias Emacs='open -a /Applications/Emacs.app'

    # Setup scala directory for Mac OSX
	# pathmunge ${HOME}/Library/Scala
    # pathmunge ${HOME}/Library/Scala/bin
    # export PATH
fi

# If the computer is not Darwin:
if [ "$(uname)" != "Darwin" ]; then
    alias ls='ls --color -GFh'
    alias ll='ls --color -GFhal'
fi

# Custom functions:
#githubInit() {
#  curl -u '$1' https://api/github.com/user/repos -d '{"name":"$2"}'
#  git remote add origin git@github.com:$1/$2.git
#  git push origin master
#}     # Create GITHUB repo from terminal

# mans() { man $1 | grep -iC2 --color=always $2 | less }		# Search in MANPAGE
mcd() { mkdir -pv "$1" && cd "$1"; }		# Make directory and cd there
ql () { qlmanage -p "$*" >& /dev/null; }		# Quick look
rmtild () { find . -name "*.*~" | xargs rm -vf; }		# Remove temporary files

# User Environment Variables:
export GRADLE_HOME='/opt/local/share/java/gradle'
# export GEM_HOME="$HOME/.gem/ruby/2.0.0"

# Fixes and Bugs:
# LANG=en_US.UTF8
export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# Only on my MAC:
if [ "$(uname)" == "Darwin" ]; then
    ## Google Dev
    SDKs="/Applications/CodeDev/Tools/SDKs"
    GCloud="${SDKs}/google-cloud-sdk"
    if [ -d "${GCloud}" ]; then
       # The next line updates PATH for the Google Cloud SDK.
       source '${GCloud}/path.bash.inc'
       # The next line enables bash completion for gcloud.
       source '${GCloud}/completion.bash.inc'
    fi
    ## Rails Dev
    if which rbenv > /dev/null; then
        eval "$(rbenv init -)"
    fi
    ## Exports -- note that just because they are exported doesn't mean they are installed
    # Some local exports:
    export ANDROID_HOME=${SDKs}/androidCurrent
    # Specify the MacTeX crap:
    # pathmunge /Library/TeX/texbin
fi

# Only on my Linux
# if [ "$(uname)" == "Linux" ]; then
#     pathmunge /opt/ActiveTcl-8.6/bin
#     MANPATH="/opt/ActiveTcl-8.6/man:${MANPATH}"
# fi

# Export other stuff that you might need:

# if [ -f "`which node`" ]; then
#     # export PATH="${HOME}/.node/bin:$PATH"
#     # pathmunge ${HOME}/.node/bin
#     export NODE_PATH=$(`which node`/../../lib/node_modules)
#     pathmunge ${HOME}/.node/bin
# fi

## Start emacs daemon (testing):
# emacs --daemon

## If the virtualenvwrapper is installed, make sure it is sourced
if [ -f "`which virtualenvwrapper.sh`" ]; then
    export WORKON_HOME=$HOME/.virtualenvs
    export PROJECT_HOME=$HOME/DevProjects
    export VIRTUALENVWRAPPER_SCRIPT=`which virtualenvwrapper.sh`
    source `which virtualenvwrapper_lazy.sh`
    # source `which virtualenvwrapper.sh`
fi

# export PYTHONHOME="/usr/local/lib/python2.7"
# export PYTHONPATH="/usr/local/lib/python2.7/site-packages:/usr/local/lib/python2.7/dist-packages:${PYTHONPATH}"

## If there is anaconda
CONDALOCATION=~/anaconda*
if [ -d ${CONDALOCATION} ]; then
    CONDALOCATION=`echo ${CONDALOCATION}`
    alias condasource="pathmunge ${CONDALOCATION}/bin;export PYTHONPATH=${CONDALOCATION}/lib/python2.7/site-packages:${PYTHONPATH}"
fi

if [ -f ~/.secretrc ]; then
    # [[ $- == *i* ]] && echo -e "*INFO*, Loading secret configs"
    source ~/.secretrc ## Place any private things, like API tokens here
fi

## In case you are using iTerm, you might wanna use the shell integration
test -e "${HOME}/.iterm2_shell_integration.bash" && source "${HOME}/.iterm2_shell_integration.bash"

## In case you are using Bash on a specific machine edit it below
if [ -f ~/.bashrc_work_machine ]; then
    # [[ $- == *i* ]] && echo -e "*INFO*, Loading more configurations"
    source ~/.bashrc_work_machine
    # [[ $- == *i* ]] && echo -e "*INFO*, To use ROS, run 'source_ros'"
    # alias source_ros='source ~/.bashrc_ros'
    # [[ $- == *i* ]] && echo -e "*INFO*, To use CuDNN, run 'source_cudnn'"
    # alias source_cudnn='source ~/.bashrc_cudnn'
fi

### Final step, cleanup any duplicates in the environment variables (preserve order)
alias path_cleanup="python -c \"import sys; from collections import OrderedDict; print ':'.join(list(OrderedDict.fromkeys(sys.argv[1].split(':'))))\""
# PATH=`path_cleanup ${PATH}`

### Final Final step, export all!
export PATH
export MANPATH
. /etc/profile.d/vte.sh
