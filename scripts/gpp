#!/usr/bin/env bash

COMP="g++"			# g++ is the best, as gcc fails :(
ARGS=""
ARGS="${ARGS} -std=c++11"	# Compiler version
# ARGS="${ARGS} -stdlib=libstdc++"	# Standard lib to use
ARGS="${ARGS} -lm"			# Attach libraries by default
ARGS="${ARGS} -lc++"		# Attach libraries by default
ARGS="${ARGS} -ggdb -g"		# Debugging
ARGS="${ARGS} -Wall"		# Warnings and errors

# It is already colored on MAC:
if [ "$(uname)"!="Darwin" ]; then
    COMP="color-${COMP}"
fi

fNameIn=$1
shift
fNameOut="${fNameIn%.*}"
extension="${fNameIn##*.}"
# If file extension not specified, try finding it:
if [[ ! -f ${fNameIn} || ${fNameIn}==${extension} ]]; then
    # try cpp:
    if [ -f ${fNameOut}.cpp ]; then
	fNameIn=${fNameOut}.cpp
    elif [ -f ${fNameOut}.c ]; then
	fNameIn=${fNameOut}.c
    elif [ -f .${extension}.cpp ]; then
	fNameIn=.${extension}.cpp
	fNameOut="${fNameIn%.*}"
    elif [ -f .${extension}.c ]; then
	fNameIn=.${extension}.c
	fNameOut="${fNameIn%.*}"
    else
	echo "File ${fNameIn} not found or extension not recognized"
	exit
    fi
fi

if [ -f ${fNameOut} ]; then
    rm ${fNameOut}
fi

# Replace ${fNameIn} with ${1} so that any input parameter would work
toRun="${COMP} ${ARGS} ${fNameIn} $@ -o ${fNameOut}"		

{
    echo ${toRun} 
    # `${toRun}`
    exec ${toRun}
} && {
    if [[ -f "${fNameOut}" && ! -x "${fNameOut}" ]]; then
	echo "Adding executable rights to ${fNameOut}..."
	chmod +x "${fNameOut}"
    fi
}

# which $COMP
# c++ -std=c++1y -lm -ggdb -g -O0 -Wall ArrayStack.cpp -o ArrayStack
